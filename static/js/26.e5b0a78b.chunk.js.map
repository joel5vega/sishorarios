{"version":3,"sources":["views/ambientes/crearAmbiente.js"],"names":["CrearAmbiente","props","handleChange","evento","target","value","name","setState","selected","state","onChange","ambientes","nombre","tipo","capacidad","edificio","piso","id","descripcion","this","datos","className","label","valor","Component"],"mappings":"uOAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAiBRC,aAAe,SAACC,GACd,IAAMC,EAASD,EAAOC,OAChBC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KACpB,EAAKC,SAAS,CAAEC,SAAS,2BAAM,EAAKC,MAAMD,UAAlB,kBAA6BF,EAAOD,MAC5D,EAAKJ,MAAMS,SAASP,IArBpB,EAAKM,MAAQ,CACXE,UAAW,GACXH,SAAU,CACRI,OAAQ,GACRC,KAAM,UACNC,UAAW,GACXC,SAAU,GACVC,KAAM,GACNC,GAAI,GACJC,YAAa,MAXA,E,qDAenB,WACEC,KAAKZ,SAAS,CAAEC,SAAUW,KAAKlB,MAAMmB,U,oBASvC,WACE,IAAI,EAA2CD,KAAKV,MAAMD,SAApDI,EAAN,EAAMA,OAAQC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,UAAWI,EAA/B,EAA+BA,YAM/B,OACE,yBAAKG,UAAU,eACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CACEC,MAAM,SACNV,OAAO,SACPW,MAAOX,EACPV,aAAciB,KAAKjB,gBAGvB,yBAAKmB,UAAU,WACb,kBAAC,IAAD,CACEC,MAAM,OACNjB,MAAOQ,EACPP,KAAK,OACLJ,aAAciB,KAAKjB,aACnBkB,MArBM,CACZ,CAAEH,GAAI,OAAQL,OAAQ,QACtB,CAAEK,GAAI,cAAeL,OAAQ,eAC7B,CAAEK,GAAI,YAAaL,OAAQ,iBAqBzB,yBAAKS,UAAU,WACb,kBAAC,IAAD,CACEC,MAAM,YACNT,KAAK,SACLD,OAAO,YACPW,MAAOT,EACPZ,aAAciB,KAAKjB,gBAGvB,yBAAKmB,UAAU,WACb,kBAAC,IAAD,CACER,KAAK,WACLS,MAAM,iBACNV,OAAO,cACPW,MAAOL,EACPhB,aAAciB,KAAKjB,qB,GAnEYsB","file":"static/js/26.e5b0a78b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport InputControlado from \"../../components/InputControlado\";\nimport SelectControlado from \"../../components/SelectControlado\";\nexport default class CrearAmbiente extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ambientes: [],\n      selected: {\n        nombre: \"\",\n        tipo: \"default\",\n        capacidad: \"\",\n        edificio: \"\",\n        piso: \"\",\n        id: \"\",\n        descripcion: \" \",\n      },\n    };\n  }\n  componentDidMount() {\n    this.setState({ selected: this.props.datos });\n  }\n  handleChange = (evento) => {\n    const target = evento.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({ selected: { ...this.state.selected, [name]: value } });\n    this.props.onChange(evento);\n  };\n  render() {\n    var { nombre, tipo, capacidad, descripcion } = this.state.selected;\n    const tipos = [\n      { id: \"aula\", nombre: \"Aula\" },\n      { id: \"laboratorio\", nombre: \"Laboratorio\" },\n      { id: \"auditorio\", nombre: \"Auditorio\" },\n    ];\n    return (\n      <div className=\"tarjeta-big\">\n        <div className=\"tarjeta-peque\">\n          <InputControlado\n            label=\"Nombre\"\n            nombre=\"nombre\"\n            valor={nombre}\n            handleChange={this.handleChange}\n          />\n        </div>\n        <div className=\"tarjeta\">\n          <SelectControlado\n            label=\"Tipo\"\n            value={tipo}\n            name=\"tipo\"\n            handleChange={this.handleChange}\n            datos={tipos}\n          />\n        </div>\n        <div className=\"tarjeta\">\n          <InputControlado\n            label=\"Capacidad\"\n            tipo=\"number\"\n            nombre=\"capacidad\"\n            valor={capacidad}\n            handleChange={this.handleChange}\n          />\n        </div>\n        <div className=\"tarjeta\">\n          <InputControlado\n            tipo=\"textarea\"\n            label=\"DescripciÃ³n\"\n            nombre=\"descripcion\"\n            valor={descripcion}\n            handleChange={this.handleChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}