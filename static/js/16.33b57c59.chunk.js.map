{"version":3,"sources":["components/Calendario.js","views/admin/EstadisticasAmbiente.js","views/admin/EstadisticasAdmin.js"],"names":["Calendario","props","EventDetail","event","el","extendedProps","paralelo","ambiente","tituloResponsable","responsable","content","className","title","contentMinimal","view","ReactDOM","render","dateClick","getDateClick","evento","day","date","getDay","startTime","toLocaleTimeString","hour","minute","hour12","console","log","eventDrop","start","endTime","end","getUTCDate","eventClick","DefinirColor","tipo","state","loading","clases","fuente","width","window","innerWidth","this","plugins","timeGrid","dayGrid","interaction","list","defaultView","header","columnHeaderFormat","weekday","height","slotLabelFormat","omitZeroMinute","locale","events","slotEventOverlap","eventOverlap","longPressDelay","eventRender","hiddenDays","allDaySlot","navLinks","editable","minTime","maxTime","slotLabelInterval","nowIndicator","Component","EstadisticasAmbiente","usuario","url","UrlService","apiUrl","total","diario","getDatosAmbientes","a","axios","get","then","response","setState","data","e","labels","Object","keys","opcionT","mantainAspectRatio","responsive","scales","y","ticks","stepSize","callback","value","index","values","x","padding","display","autoSkip","datasets","type","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","skipNull","options","map","aula","key","EstadisticasAdmin","docente_equivalente","eventos","datos"],"mappings":"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","file":"static/js/16.33b57c59.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n//import { EventInput } from '@fullcalendar/core'\n//import all from '@fullcalendar/core'\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGrid from \"@fullcalendar/daygrid\";\nimport timeGrid from \"@fullcalendar/timegrid\";\nimport list from \"@fullcalendar/list\";\nimport interaction from \"@fullcalendar/interaction\";\nimport \"../main.scss\";\n\nexport default class Calendario extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      clases: [],\n      fuente: this.props.fuente,\n      width: window.innerWidth,\n      view: \"timeGridWeek\",\n    };\n  }\n\n  render() {\n    const { view } = this.props;\n    if (this.state.loading) {\n      return <div>cargando todavia</div>;\n    }\n    if (this.state.fuente === \"undefined\") {\n      return <div>No se encuentra fuente</div>;\n    }\n\n    return (\n      <FullCalendar\n        plugins={[timeGrid, dayGrid, interaction, list]}\n        // defaultView=\"timeGridWeek\"\n        defaultView={view}\n        //para ocultar el encabezado\n        header={false}\n        //Para simplificar los dias 'long' nos dara el nombre completo\n        // columnHeaderFormat={{ weekday: \"long\" }}\n        columnHeaderFormat={{ weekday: \"short\" }}//corto\n        //Para que la altura se ajuste a la de la pantalla\n        // contentHeight='auto'\n        height='auto'\n        slotLabelFormat={{\n          hour: \"numeric\",\n          minute: \"2-digit\",\n          omitZeroMinute: false,\n        }}\n        //idioma\n        locale=\"es\"\n        //EVENTOS\n        events={this.props.fuente}\n        //para evitar superposicion de elementos\n        slotEventOverlap={false}\n        eventOverlap={false}\n        //para evitar cambiar con pantalla tactil\n        longPressDelay=\"1000\"\n        //para poner datos especificos en el cuadro\n        eventRender={this.EventDetail}\n        hiddenDays=\"0\"\n        allDaySlot={false}\n        navLinks=\"true\" // can click day/week names to navigate views\n        editable=\"true\"\n        //eje del tiempo\n        \n        minTime=\"7:30\"\n        maxTime=\"21:00\"\n        // slotDuration=\"00:30:00\"\n        slotLabelInterval=\"00:30:00\"\n        \n        nowIndicator={true}\n        // aspectRatio={5}\n        dateClick={this.dateClick}\n        eventClick={this.eventClick}\n        eventDrop={this.eventDrop}\n      />\n    );\n  }\n  EventDetail = ({ event, el }) => {\n    // console.log(this.props.view);\n    const {\n      // semestre,\n      paralelo,\n      ambiente,\n      tituloResponsable,\n      responsable,\n    } = event.extendedProps;\n    // extendedProps is used to access additional event properties.\n    const content = (\n      <div className=\"dato-cal\">\n        <div className=\"sigla\">\n          {event.title}-{paralelo}\n        </div>\n        <div className=\"responsable\">\n          {tituloResponsable}.{responsable}\n        </div>\n        <div className=\"texto-grande\">{ambiente}</div>\n      </div>\n    );\n    const contentMinimal = (\n      <div className=\"dato-cal\">\n        <div className=\"texto-grande\">\n          {event.extendedProps.ambiente}\n          <br />\n        </div>\n        <div className=\"sigla\">\n          {event.title}-{paralelo}\n        </div>\n      </div>\n    );\n    if (this.props.view === \"timeGridWeek\") {\n      ReactDOM.render(content, el);\n    } else {\n      ReactDOM.render(contentMinimal, el);\n    }\n\n    return el;\n  };\n  dateClick = (event) => {\n    const { getDateClick } = this.props;\n    // console.log(event)\n    //Dia\n    let day = event.date.getDay();\n    //hora inicio\n    let horaini = event.date.toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",hour12:false\n    });\n    let date = event.date;\n    // console.log(\"horaIni:  \"+horaini)\n    let evento = { day: day, startTime: horaini, date: date };\n    console.log(evento);\n    getDateClick(evento);\n    // return evento\n  };\n  eventDrop = (eventDrop) => {\n    // alert(\"paro\");\n    var event=eventDrop.event\n    console.log(eventDrop);\n    \n    //Dia\n    let day = event.start.getDay();\n    \n    //hora inicio\n    let horaini = event.start.toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",hour12:false\n    });\n    let horafin = event.end.toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\",hour12:false\n    });\n    let date = event.start.getUTCDate();\n    // console.log(\"horaIni:  \"+horaini)\n    \n    let evento = { day: day, startTime: horaini,endTime:horafin ,date: date };\n    console.log(evento);\n    \n    // console.log(day);\n  };\n  eventClick = (event) => {\n    // console.log(\"hacer click en el evento\")\n    const { eventClick } = this.props;\n    // console.log(event);\n    eventClick(event);\n    //mostrar datos extras\n    // console.log(event.event.extendedProps.semestre);\n    //obtener datos\n    // console.log(event.event.start.getDay());\n    // console.log(event.event.start.toLocaleTimeString());\n    // console.log(event.event.end.toLocaleTimeString());\n  };\n\n  DefinirColor = ({ event }) => {\n    // extendedProps is used to access additional event properties.\n    if ((event.tipo = \"teoria\")) {\n      return \"green\";\n    } else return \"blue\";\n  };\n}\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport UrlService from \"../../services/UrlService\";\nexport default class EstadisticasAmbiente extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usuario: \"\",\n      url: UrlService.apiUrl(),\n      ambiente: {\n        total: {},\n        diario: {}\n      }\n    };\n  }\n  componentDidMount() {\n    this.getDatosAmbientes();\n  }\n  async getDatosAmbientes() {\n    var url = this.state.url + 'datos?tipo=ambiente'\n    try {\n      axios.get(url).then((response) => {\n        this.setState({ ambiente: response.data.ambiente })\n        // console.log(response.data.ambiente)\n      })\n    }\n    catch (e) { console.log(e) }\n  }\n  render() {\n    var { diario, total } = this.state.ambiente;\n    var labels = Object.keys(total)\n    const opcionT = {\n      mantainAspectRatio: false,\n      responsive: true,\n      scales: {\n        y: {\n          ticks: {\n            stepSize: 6,\n            callback: function (value, index, values) {\n              return value + ' hrs.';\n            }\n          }\n        },\n        x: {\n          ticks: {\n            padding: 1,\n            display: \"auto\", autoSkip: true,\n            callback: function (value, index, values) {\n              // var id = values\n              if (labels[value] === \"length\") {\n                // this.display = true\n                return \"\";\n              }\n              else {\n                return labels[value];\n              }\n            }\n\n          }\n        }\n      }\n    }\n\n\n    const data = {\n      labels: labels,\n      datasets: [{\n        type: 'bar',\n        label: \"Uso total\",\n        backgroundColor: '#40826d',\n        borderColor: 'black',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(0,255,0,0.2)',\n        hoverBorderColor: 'white',\n        data: total,\n        skipNull: true\n      }]\n    }\n\n    return (\n      <div className=\"cuadro\" >\n        <div className=\"tarjetas-titulo\">Uso de ambientes</div>\n        <div className=\"diagrama\">\n          <Bar data={data} options={opcionT} />\n        </div>\n\n        <div className=\"tarjeta-big\">\n          <div className=\"tarjetas-titulo\">Uso de Ambientes por día</div>\n          {Object.keys(diario).map((aula) => (\n            <div className=\"tarjeta-big\" key={aula}>\n              {/* <div className=\"tarjetas-titulo\">{aula}</div> */}\n              <div className=\"tarjeta-peque\">\n                <Bar data={{\n                  labels: Object.keys(diario[aula]),\n                  // labels:[\"Lun\",\"Ma\",\"mi\",\"J\",\"V\"],\n                  datasets: [{\n                    label: aula,\n                    backgroundColor: \"#add8e6\",\n                    borderColor: 'black',\n                    data: diario[aula]\n                  }]\n                }} options={{\n                  mantainAspectRatio: false,\n                  responsive: true,\n                  scales: {\n                    y: {\n                      ticks: {\n                        callback: function (value, index, values) {\n                          return value + ' h.';\n                        }\n                      }\n                    },\n                    x: {\n                      ticks: {\n                        display: \"auto\", autoSkip: true,\n                        callback: function (value, index, values) {\n                          var dias = [\"Lun\", \"Mar\", \"Mie\", \"Jue\", \"Vie\", \"Sab.\"]\n                          if (labels[value] === \"length\") {\n                            \n                          }\n                          else {\n                            return dias[index];\n                          }\n                        }\n                      }\n                    }\n                  }\n                }} />\n              </div>\n\n            </div>\n          ))}\n        </div>\n\n      </div >\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport EstadisticasAmbiente from \"./EstadisticasAmbiente\";\nimport Calendario from \"../../components/Calendario\";\nexport default class EstadisticasAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usuario: \"\",\n      responsable: {},\n      ambiente: {}\n    };\n   \n  }\n  eventClick(event){\n    // console.log(\"hola\",event)\n  }\n  getDateClick(date) {\n    // console.log(date)\n  }\n  render() {\n    var { docente_equivalente } = this.state.responsable;\n    var {eventos} = this.props.clases;\n    return (\n      <div className=\"tarjeta-big\">\n        <div className=\"col border-right\">\n\n          <div className=\"tarjeta-titulo\">Actividades en curso {eventos}</div>\n          <Calendario\n            fuente={this.props.clases}\n            getDateClick={this.getDateClick}\n            eventClick={this.eventClick}\n            view=\"timeGrid\"\n          />\n\n        </div>\n        <div className=\"col\">\n          <EstadisticasAmbiente datos={this.state.ambiente} />\n        </div>\n        {docente_equivalente}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}